{"version":3,"sources":["context/MealsReducer.js","context/MealsContext.js","components/ClearButton.js","components/MealsItem.js","components/SearchResult.js","components/Meals.js","components/SeachForm.js","components/Home.js","components/MealsDetails.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["MealsReducer","state","action","type","meals","payload","loading","meal","MealsContext","createContext","initialState","MealsContextState","props","useReducer","dispatch","fetchMeals","val","a","setLoading","fetch","res","json","data","console","log","message","fetchSingleMeal","id","Provider","value","clearMeals","children","ClearButton","useContext","className","onClick","MealsItem","to","idMeal","class","src","strMealThumb","strMeal","SearchResult","text","Meals","length","map","SeachForm","useState","setText","useEffect","M","AutoInit","onSubmit","e","preventDefault","toast","html","target","trim","Home","MealsDetails","useParams","ingredients","i","push","strArea","strCategory","strInstructions","ing","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e85204f5.chunk.js","sourcesContent":["const MealsReducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'GET_MEALS': \r\n        return {\r\n            ...state,\r\n            meals: action.payload,\r\n            loading: false\r\n        }\r\n\r\n        case 'GET_SINGLE_MEAL':\r\n        return {\r\n            ...state,\r\n            meal: action.payload,\r\n            loading: false\r\n        }\r\n\r\n        case 'SET_LOADING': \r\n        return {\r\n            ...state,\r\n            loading: true\r\n\r\n        }\r\n\r\n        case 'CLEAR_MEALS':\r\n        return {\r\n            ...state,\r\n            meals: []\r\n        }\r\n        \r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport default MealsReducer;","import {createContext, useReducer} from 'react';\r\nimport MealsReducer from './MealsReducer';\r\nexport const MealsContext = createContext();\r\n\r\nconst initialState = {\r\n    meals: [],\r\n    loading: false,\r\n    meal: {}\r\n}\r\n\r\n\r\nconst MealsContextState = (props) => {\r\n\r\nconst [state, dispatch] = useReducer(MealsReducer, initialState);\r\n\r\nconst fetchMeals = async (val) => {\r\n    try {\r\n        setLoading();\r\n        const res = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${val}`);\r\n        const data = await res.json();\r\n        console.log(data.meals);\r\n        dispatch({type: 'GET_MEALS', payload: data.meals })\r\n\r\n    }\r\n    catch (err) {\r\n        console.log(`Ошибка: ${err.message}`)\r\n    } \r\n\r\n}\r\n\r\nconst fetchSingleMeal = async (id) => {\r\n    setLoading();\r\n    const res = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\r\n    const data = await res.json();\r\n    console.log(data.meals[0])\r\n\r\n    dispatch({type: 'GET_SINGLE_MEAL', payload: data.meals[0]})\r\n}\r\n\r\nconst setLoading = () => {\r\n    dispatch({type: 'SET_LOADING'})\r\n}\r\n\r\nconst clearMeals = () => {\r\n    console.log('works')\r\n    dispatch({type: 'CLEAR_MEALS'})\r\n}\r\n\r\n\r\n    return (\r\n        <MealsContext.Provider value={{\r\n            meals: state.meals,\r\n            loading: state.loading,\r\n            meal: state.meal,\r\n            fetchMeals,\r\n            setLoading,\r\n            fetchSingleMeal,\r\n            clearMeals\r\n        }}>\r\n            {props.children}\r\n        </MealsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MealsContextState;","import React, {useContext} from 'react'\r\nimport { MealsContext } from '../context/MealsContext';\r\n\r\nconst ClearButton = () => {\r\n    const {clearMeals} = useContext(MealsContext);\r\n    return (\r\n        <button className=\"btn bg-blue\" onClick={clearMeals}>Очистить результаты поиска</button>\r\n    )\r\n}\r\n\r\nexport default ClearButton\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst MealsItem = ({meal}) => {\r\n    return (\r\n        <Link to={`/meals/${meal.idMeal}`} class=\"meal-item\">\r\n                <img src={meal.strMealThumb}/>\r\n                <div class=\"meal-title\">\r\n                    <h3>{meal.strMeal}</h3>\r\n                </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MealsItem;\r\n","import React, {useContext, useEffect} from 'react'\r\nimport { MealsContext } from '../context/MealsContext';\r\n\r\nconst SearchResult = ({text}) => {\r\n    const {meals} = useContext(MealsContext);\r\n\r\n    return (\r\n        <div class=\"result-heading\">\r\n                <h1>{text}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, {useContext} from 'react';\r\nimport { MealsContext } from '../context/MealsContext';\r\nimport ClearButton from './ClearButton';\r\nimport MealsItem from './MealsItem';\r\nimport Preloader from './Preloader';\r\nimport SearchResult from './SearchResult';\r\n\r\nconst Meals = () => {\r\n    const {meals, clearMeals} = useContext(MealsContext);\r\n    console.log(meals)\r\n\r\n\r\n    return (\r\n        <>\r\n        {meals && meals.length > 0 && <ClearButton/>}\r\n        {meals && meals.length > 0 && <SearchResult text={'The result found are as follows:'}/>}\r\n        {!meals && <SearchResult text={'No any info matching to your request. Please, change your request...'}/>      \r\n        }\r\n        <div className=\"meals-container\">\r\n            {/* {meals.length == 0 && <Preloader/>} */}\r\n            {meals && meals.length > 0 && meals.map(meal => {\r\n                return <MealsItem key={meal.idMeal} meal={meal}/>\r\n            }) }\r\n        </div>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Meals;\r\n","import React, {useState, useContext, useEffect} from 'react'\r\nimport { MealsContext } from '../context/MealsContext';\r\n// import 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css';\r\n// import {Toast} from 'react-materialize';\r\n\r\nconst SeachForm = () => {\r\n    const[text, setText] = useState('');\r\n    const {fetchMeals} = useContext(MealsContext);\r\n    useEffect(() => {\r\n        M.AutoInit();\r\n      },[])\r\n    \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text !== '') {\r\n            fetchMeals(text)\r\n            setText('');\r\n        } else {\r\n            // alert('Please, fill in the field')\r\n            M.toast({html: 'Поле не должно быть пустым. Заполните пожалуйста!'})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"browser-default\">Meal Finder</h1>\r\n        <div className=\"form-wrapper my-4\">\r\n            <form id=\"search-form\" onSubmit={onSubmit}>\r\n                <input type=\"text\" className=\"browser-default\" value={text} className=\"search-input\" onChange={e=>setText(e.target.value.trim())}/>\r\n                <button className=\"search-button btn bg-dark\"><i className=\"fas fa-search browser-default\"></i></button>\r\n            </form>\r\n            <button className=\"random-button btn bg-dark\"><i className=\"fas fa-random browser-default\"></i></button>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SeachForm\r\n","import React from 'react'\r\nimport Meals from './Meals'\r\nimport SeachForm from './SeachForm'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <SeachForm/>\r\n            <Meals/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useEffect, useContext} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport { MealsContext } from '../context/MealsContext';\r\n\r\nconst MealsDetails = (props) => {\r\n    const {fetchSingleMeal, meal} = useContext(MealsContext);\r\n    const {id} = useParams('id');\r\n    useEffect(() => {\r\n        fetchSingleMeal(id);\r\n    }, [])\r\n\r\n    let ingredients = [];\r\n\r\n\r\n    for (let i=1; i<=20; i++) {\r\n        if (meal[`strIngredient${i}`]) {\r\n            ingredients.push(`${meal[`strIngredient${i}`]} - ${meal[`strMeasure${i}`]}`)\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div class=\"single-meal my-4\">\r\n            <Link to={'/MealFinder'} className=\"back btn btn-circle bg-dark inline-block my-4\">Назад к результатам поиска</Link><br/>\r\n            <img src={meal.strMealThumb}/>\r\n            <h1>{meal.strMeal}</h1>\r\n            <div class=\"meal-category\">\r\n                {meal.strArea ? <p class=\"btn btn-circle bg-dark inline-block\">{meal.strArea}</p> : false}\r\n                {meal.strCategory ? <p class=\"btn btn-circle bg-blue inline-block\">{meal.strCategory}</p> : false}\r\n            </div>\r\n            <div class=\"meal-instructions\">\r\n                <p>{meal.strInstructions}</p>\r\n                <h2>Main ingredients:</h2>\r\n                <ul class=\"meal-ingredients\">\r\n                {ingredients.map(ing => {\r\n                    return <li className=\"meal-ingredients__item btn btn-circle bg-light inline-block\">{ing}</li>\r\n                }\r\n                )}\r\n        </ul>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MealsDetails\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Sorry, the page does not exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from './components/Home';\nimport MealsDetails from './components/MealsDetails';\nimport NotFound from './components/NotFound';\nimport MealsContextState from './context/MealsContext';\n\nconst App = () => {\n  return (\n    <MealsContextState>\n        <Router>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path={'/MealFinder'} component={Home}/>\n              <Route path={'/meals/:id'} component={MealsDetails}/>\n              <Route path={'*'} component={NotFound}/>\n            </Switch>\n          </div>\n        </Router>\n    </MealsContextState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}